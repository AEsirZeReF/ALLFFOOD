DROP DATABASE  ALLFOOD;
CREATE DATABASE ALLFOOD;
USE ALLFOOD;
CREATE TABLE CLIENTE
(
cod_cli int NOT NULL auto_increment PRIMARY KEY,
usuario varchar(20) not null,
contaseña varchar(10) not null,
nom_cli varchar(50) NOT NULL,
ape_cli varchar(50) NOT NULL,
edad_cli int NOT NULL,
celular_cli varchar(9) NOT NULL,
saldo_cli decimal default 0.0
);

CREATE TABLE CHEF
(
cod_chef int NOT NULL AUTO_INCREMENT PRIMARY KEY ,
usuario varchar(20) not null,
contaseña varchar(10) not null,
nom_chef varchar(50)NOT NULL,
ape_chef varchar(50)NOT NULL,
edad_chef int NOT NULL,
celular_chef varchar(9) NOT NULL,
direccion varchar(50) NOT NULL,
saldo_chef  decimal (9,2)
);
CREATE TABLE COMIDA
(
cod_comida int NOT NULL auto_increment PRIMARY KEY,
nom_comida varchar(50)NOT NULL
);
CREATE TABLE SERVICIO
(
cod_servicio int NOT NULL auto_increment PRIMARY KEY,
nom_servico varchar(50) NOT NULL,
cod_chef int NOT NULL,
cod_comida int NOT NULL ,
descripcion varchar(200)NOT NULL,
precio_persona decimal (9,2),
fec_publicacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP on update current_timestamp,
CONSTRAINT FOREIGN KEY fk_COD_CHEF (cod_chef) REFERENCES CHEF (cod_chef),
CONSTRAINT FOREIGN KEY fk_COD_COMIDA (cod_comida) REFERENCES COMIDA (cod_comida)
);
CREATE TABLE PEDIDO
(
cod_pedido int not null auto_increment primary key,
cod_cli int NOT NULL ,
cod_servicio int NOT NULL,
cant_personas int NOT NULL,
fecha_compra TIMESTAMP DEFAULT CURRENT_TIMESTAMP on update current_timestamp,
fecha_entrega TIMESTAMP ,
pago_total decimal (9,2),
valoracion INT CHECK (valoracion >=1 and valoracion <=5),
CONSTRAINT FOREIGN KEY fk_COD_CLI (cod_cli) REFERENCES CLIENTE (cod_cli),
CONSTRAINT FOREIGN KEY fk_COD_SERVICIO(cod_servicio) REFERENCES SERVICIO (cod_servicio)
);
/*CHEF*/
/* -Registrar Chef ------------------- */
delimiter @@
create procedure RegistrarChef
(usuario varchar(20),
contaseña varchar(10),
nom_chef varchar(50),
ape_chef varchar(50),
edad_chef int,
celular_chef varchar(9),
direccion varchar(50))
begin
insert into chef values (null,usuario,contaseña,nom_chef,ape_chef,edad_chef,celular_chef,direccion,0.0);
end @@
delimiter ;
call RegistrarChef ('cuchicu','cuchi123','cuchi','cu',20,'996006381','27 de marzo');
call RegistrarChef('Pepe','14g5','Pedro','Ramos',35,'986574123','Av.Los Jardines 1547');
/*validar CHEF ----------------------- */
delimiter @@
create procedure ValidarChef(usuario varchar(20),contraseña varchar(10))
begin
select * from Chef where usuario = usuario and contaseña = contraseña;
end @@
delimiter ;
call ValidarChef ('cuchicu','cuchi123');
delimiter @@
create procedure ListarChef()
begin
select * from chef  ;
end @@
delimiter ;
call ListarChef;
/*CLIENTE*/
/* -Registrar Cliente - */
delimiter @@
create procedure RegistrarCliente
(usuario varchar(20),
contraseña varchar(10),/* era contraseña XD*/
nom_cli varchar(50),
ape_cli varchar(50),
edad_cli  int,
celular_cli  varchar(9),
saldo_cli  decimal)
begin
insert into cliente values (null,usuario,contraseña,nom_cli ,ape_cli ,edad_cli ,celular_cli ,saldo_cli );
end @@
delimiter ;
call RegistrarCliente('Pastel','74g5','Mario','Fernandez',25,'974652001',198);
call RegistrarCliente('eli','el12','Mario','Fernandez',25,'974652001',198);
/* validacion  del cliente*/
delimiter @@
create procedure ValidarCliente(usuario varchar(20),
contraseña varchar(10))
begin
select * from cliente where usuario = usuario and contaseña = contraseña;
end @@
delimiter ;
call ValidarCliente ('Pastel','74g5');

select*from Cliente;
/*Listar Cliente*/
delimiter @@
create procedure ListarCliente()
begin
select * from cliente;
end @@
delimiter ;

/*COMIDA*/
/* -Registrar Comida- */
delimiter @@
create procedure RegistrarComida
(
nom_comida varchar(50))
begin
insert into comida values (null,nom_comida);
end @@
delimiter ;
call RegistrarComida('Aji de gallina');
call RegistrarComida('Anticucho');

/*SERVICIO*/
/* -Registrar SERVICIO - */
select * from servicio;
delimiter @@
create procedure RegistrarServicio
(
nom_servico varchar(50),
cod_chef int,
cod_comida int ,
descripcion varchar(200),
precio_persona decimal)
begin
insert into servicio (nom_servico,cod_chef,cod_comida ,descripcion ,precio_persona )  
values (nom_servico,cod_chef,cod_comida ,descripcion ,precio_persona );
end @@
delimiter ;
call RegistrarServicio('Pedido Especial',1,1,'Disfruta de nuestro especial:bla bla bla',10);
select*from Servicio;
/*Listar Servicio*/ 

/*create table tiempo(
t1 TIMESTAMP DEFAULT CURRENT_TIMESTAMP on update current_timestamp );
drop table tiempo;
insert into tiempo values ();
select * from tiempo;*/

delimiter @@
create procedure ListarServicio()
begin
select * from  chef t1 inner join servicio t2 on t1.cod_chef=t2.cod_chef inner
join comida t3 on t2.cod_comida =t3.cod_comida ;
end @@
delimiter ;
call ListarServicio;

/*PEDIDO*/
/*Registrar Pedido*/
delimiter @@
create procedure RegistrarPedido
(
cod_cli int,
cod_servicio int,
cant_personas int,
fec_entrega timestamp,
pago_total decimal(9.2),
valoracion INT)
begin
insert into pedido (cod_cli,cod_servicio,cant_personas,fecha_entrega,pago_total,valoracion)
values (cod_cli,cod_servicio,cant_personas,fec_entrega,pago_total,valoracion);
end@@
delimiter ;
call RegistrarPedido(1,1,20,'2019-12-20 10:02:52',500,4);

/*Listar pedido*/
delimiter @@
create procedure ListarPedido()
begin
select *  from pedido t1 
inner join cliente t2 on t1.cod_cli=t2.cod_cli inner join servicio t3 on t1.cod_servicio=t3.cod_servicio;
end @@
delimiter ;
call ListarPedido;